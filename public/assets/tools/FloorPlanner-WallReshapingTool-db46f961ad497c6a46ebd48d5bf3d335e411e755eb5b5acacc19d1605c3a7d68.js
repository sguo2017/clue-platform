function WallReshapingTool(){go.Tool.call(this),this.name="WallReshaping";var t=new go.Shape;t.figure="Diamond",t.desiredSize=new go.Size(7,7),t.fill="lightblue",t.stroke="dodgerblue",t.cursor="move",this._handleArchetype=t,this._handle=null,this._adornedShape=null,this._reshapeObjectName="SHAPE",this._angle=0,this._length,this._isBuilding=!1,this._returnPoint=null,this._returnData=null}function reshapeWall(t,e,a,n,o){var i=t.memberParts,r=[],s=t.rotateObject.angle;i.iterator.each(function(t){r.push(t)});for(var d=new go.Map("string","number"),l=null,h=Number.MAX_VALUE,p=0;p<r.length;p++){var u=r[p],c=Math.sqrt(u.location.distanceSquaredPoint(e));d.add(u.data.key,c);var g=getWallPartEndpoints(u),m=Math.min(Math.sqrt(g[0].distanceSquaredPoint(a)),Math.sqrt(g[1].distanceSquaredPoint(a)));m<h&&(h=m,l=u)}if(null!==l){var f=l.location,y=l.data.width,P=s,v=new go.Point(f.x+y/2,f.y),S=new go.Point(f.x-y/2,f.y);v.offset(-f.x,-f.y).rotate(P).offset(f.x,f.y),S.offset(-f.x,-f.y).rotate(P).offset(f.x,f.y);var M,b,k=Math.sqrt(e.distanceSquaredPoint(v)),W=Math.sqrt(e.distanceSquaredPoint(S));k>W?(M=k,b=v):(M=W,b=S);Math.sqrt(e.distanceSquaredPoint(n))<M&&(n=b)}a===t.data.endpoint?o.model.setDataProperty(t.data,"endpoint",n):o.model.setDataProperty(t.data,"startpoint",n),o.updateWall(t);var T=t.rotateObject.angle,w=T-s;d.iterator.each(function(t){var n=o.findPartForKey(t.key),i=t.value,r=Math.sqrt(e.distanceSquaredPoint(a)),s=new go.Point(e.x+i/r*(a.x-e.x),e.y+i/r*(a.y-e.y));n.location=s,n.angle=(n.angle+w)%360})}go.Diagram.inherit(WallReshapingTool,go.Tool),Object.defineProperty(WallReshapingTool.prototype,"handleArchetype",{get:function(){return this._handleArchetype}}),Object.defineProperty(WallReshapingTool.prototype,"handle",{get:function(){return this._handle},set:function(t){this._handle=t}}),Object.defineProperty(WallReshapingTool.prototype,"adornedShape",{get:function(){return this._adornedShape},set:function(t){this._adornedShape=t}}),Object.defineProperty(WallReshapingTool.prototype,"angle",{get:function(){return this._angle},set:function(t){this._angle=t}}),Object.defineProperty(WallReshapingTool.prototype,"length",{get:function(){return this._length},set:function(t){this._length=t}}),Object.defineProperty(WallReshapingTool.prototype,"reshapeObjectName",{get:function(){return this._reshapeObjectName},set:function(t){this._reshapeObjectName=t}}),Object.defineProperty(WallReshapingTool.prototype,"isBuilding",{get:function(){return this._isBuilding},set:function(t){this._isBuilding=t}}),Object.defineProperty(WallReshapingTool.prototype,"returnData",{get:function(){return this._returnData},set:function(t){this._returnData=t}}),Object.defineProperty(WallReshapingTool.prototype,"returnPoint",{get:function(){return this._returnPoint},set:function(t){this._returnPoint=t}}),WallReshapingTool.prototype.updateAdornments=function(t){if(!(null===t||t instanceof go.Link)){if(t.isSelected&&!this.diagram.isReadOnly){var e=t.findObject(this.reshapeObjectName);if(e&&"WallGroup"===e.part.data.category){var a=t.findAdornment(this.name);if(null===a&&(a=this.makeAdornment(e)),null!==a&&null!=e.geometry){var n=e.geometry,o=n.bounds;return a.findObject("BODY").desiredSize=o.size,a.elements.each(function(t){if(t.name!==undefined){var e=0,a=0;switch(t.name){case"sPt":e=n.startX,a=n.startY;break;case"ePt":e=n.endX,a=n.endY}var i=Math.min((e-o.x)/o.width,1),r=Math.min((a-o.y)/o.height,1);i<0&&(i=0),r<0&&(r=0),i>1&&(i=1),r>1&&(r=1),isNaN(i)&&(i=0),isNaN(r)&&(r=0),t.alignment=new go.Spot(Math.max(0,i),Math.max(0,r))}}),t.addAdornment(this.name,a),a.location=e.getDocumentPoint(go.Spot.Center),void(a.angle=e.getDocumentAngle())}}}t.removeAdornment(this.name)}},WallReshapingTool.prototype.canStart=function(){if(!this.isEnabled)return!1;var t=this.diagram;return null!==t&&!t.isReadOnly&&(!!t.allowReshape&&(!!t.lastInput.left&&(null!==this.findToolHandleAt(t.firstInput.documentPoint,this.name)||this.isBuilding)))},WallReshapingTool.prototype.doActivate=function(){var t=this.diagram;if(null!==t){if(this.isBuilding){var e=this.adornedShape.part;this.handle=this.findToolHandleAt(e.data.endpoint,this.name)}else{if(this.handle=this.findToolHandleAt(t.firstInput.documentPoint,this.name),null===this.handle)return;var a=this.handle.part.adornedObject,e=a.part;if(!a)return;this.adornedShape=a,this.returnPoint=this.snapPointToGrid(t.firstInput.documentPoint);var n=e.memberParts;if(0!=n.count){var o=new go.Map("string",go.Point);n.iterator.each(function(t){o.add(t.data.key,t.location)}),this.returnData=o}}t.isMouseCaptured=!0,this.startTransaction(this.name),this.isActive=!0}},WallReshapingTool.prototype.doMouseMove=function(){var t=this.diagram,e=this;this.handle.part.adornedPart;if(this.isActive&&null!==t){var a=t.lastInput.documentPoint;e.calcAngleAndLengthFromHandle(a);var n=t.lastInput.documentPoint;t.floorplanUI&&t.floorplanUI.setSelectionInfo(this.adornedShape.part,t),this.reshape(n)}t.updateWallAngles()},WallReshapingTool.prototype.doMouseUp=function(){var t=this.diagram;if(this.isActive&&null!==t){var e=t.lastInput.documentPoint;this.reshape(e),this.transactionResult=this.name}this.stopTool()},WallReshapingTool.prototype.doDeactivate=function(){var t=this.diagram,e=(this.returnData,this.handle.part.adornedPart),a=e.data.startpoint,n=e.data.endpoint;if(Math.sqrt(a.distanceSquared(n.x,n.y))<1){t.remove(e),e.memberParts.iterator.each(function(e){t.remove(e)});var o=[];t.pointNodes.iterator.each(function(t){t.data.key.includes(e.data.key)&&o.push(t)}),t.remove(o[0]),t.remove(o[1])}"Esc"!==t.lastInput.key||this.isBuilding||(t.skipsUndoManager=!0,t.startTransaction("reset to old data"),"sPt"===this.handle.name?e.data.startpoint=this.returnPoint:e.data.endpoint=this.returnPoint,t.updateWall(e),this.returnData&&this.returnData.iterator.each(function(a){var n=a.key,o=a.value,i=t.findPartForKey(n);i.location=o,i.rotateObject.angle=e.rotateObject.angle}),t.commitTransaction("reset to old data"),t.skipsUndoManager=!1);var i=this.diagram.findNodesByExample({category:"GLPointNode"});t.removeParts(i,!0),t.updateWallDimensions(),t.commitTransaction(this.name),this.isActive=!1},WallReshapingTool.prototype.makeAdornment=function(t){var e=new go.Adornment;e.type=go.Panel.Spot,e.locationObjectName="BODY",e.locationSpot=go.Spot.Center;var a=new go.Shape;return a.name="BODY",a.fill=null,a.stroke=null,a.strokeWidth=0,e.add(a),a=this.makeHandle(),a.name="sPt",e.add(a),a=this.makeHandle(),a.name="ePt",e.add(a),e.category=this.name,e.adornedObject=t,e},WallReshapingTool.prototype.makeHandle=function(){return this.handleArchetype.copy()},WallReshapingTool.prototype.calcAngleAndLengthFromHandle=function(t){var e,a,n=this,o=(this.diagram,this.handle),i=this.adornedShape.part,r=i.adornments.iterator;r.each(function(t){t.category===n.name&&(a=t)}),a.elements.each(function(t){t.name!=undefined&&t.name!=o.name&&(e=t)});var s=e.getDocumentPoint(go.Spot.Center);deltaY=t.y-s.y,deltaX=t.x-s.x;var d=Math.atan2(deltaY,deltaX)*(180/Math.PI);d<0&&(d+=360),n.angle=d;var l=Math.sqrt(t.distanceSquared(s.x,s.y));n.length=l},WallReshapingTool.prototype.snapPointToGrid=function(t){var e=this.diagram,a=e.model.modelData.gridSize*Math.round(t.x/e.model.modelData.gridSize),n=e.model.modelData.gridSize*Math.round(t.y/e.model.modelData.gridSize);return new go.Point(a,n)},WallReshapingTool.prototype.reshape=function(t){var e=this.diagram,a=this,n=this.adornedShape,o=n.part;if(this.diagram.lastInput.shift){var i;i="sPt"===a.handle.name?o.data.endpoint:o.data.startpoint;var r=e.model.modelData.gridSize,s=e.model.modelData.gridSize;this.diagram.toolManager.draggingTool.isGridSnapEnabled||(s=1);var d=a.angle,l=a.length;if(d>67.5&&d<112.5){var h=i.y+l;h=s*Math.round(h/s),t=new go.Point(i.x,h)}if(d>112.5&&d<202.5){var p=i.x-l;p=s*Math.round(p/s),t=new go.Point(p,i.y)}if(d>247.5&&d<292.5){var h=i.y-l;h=s*Math.round(h/s),t=new go.Point(i.x,h)}if(d>337.5||d<22.5){var p=i.x+l;p=s*Math.round(p/s),t=new go.Point(p,i.y)}if(d>22.5&&d<67.5){var p=Math.sin(.785)*l;p=s*Math.round(p/s)+i.x;var h=Math.cos(.785)*l;h=s*Math.round(h/s)+i.y,t=new go.Point(p,h)}if(d>112.5&&d<157.5){var p=Math.sin(.785)*l;p=i.x-s*Math.round(p/s);var h=Math.cos(.785)*l;h=s*Math.round(h/s)+i.y,t=new go.Point(p,h)}if(d>202.5&&d<247.5){var p=Math.sin(.785)*l;p=i.x-s*Math.round(p/s);var h=Math.cos(.785)*l;h=i.y-s*Math.round(h/s),t=new go.Point(p,h)}if(d>292.5&&d<337.5){var p=Math.sin(.785)*l;p=i.x+s*Math.round(p/s);var h=Math.cos(.785)*l;h=i.y-s*Math.round(h/s),t=new go.Point(p,h)}s=r}t=this.diagram.toolManager.draggingTool.isGridSnapEnabled?this.snapPointToGrid(t):new go.Point(t.x,t.y);var u=this.handle.name;if(u!==undefined){switch(u){case"sPt":reshapeWall(o,o.data.endpoint,o.data.startpoint,t,e,a);break;case"ePt":reshapeWall(o,o.data.startpoint,o.data.endpoint,t,e,a)}this.updateAdornments(n.part),this.showMatches(),e.updateWallDimensions()}},WallReshapingTool.prototype.showMatches=function(){var t=this.diagram;if(t.model.modelData.preferences.showWallGuidelines){var e,a=this,n=this.adornedShape.part;e="sPt"===this.handle.name?n.data.startpoint:n.data.endpoint;var o=this.adornedShape.part,i=t.findNodesByExample({category:"GLPointNode"});t.removeParts(i,!0);this.diagram.findNodesByExample({category:"WallGroup"}).iterator.each(function(t){if(t.data.key!=o.data.key){var n=t.findObject("SHAPE"),i=(n.geometry,t.data.startpoint),r=t.data.endpoint;a.checkPtLinedUp(i,e.x,i.x,e),a.checkPtLinedUp(i,e.y,i.y,e),a.checkPtLinedUp(r,e.x,r.x,e),a.checkPtLinedUp(r,e.y,r.y,e)}})}},WallReshapingTool.prototype.checkPtLinedUp=function(t,e,a,n){function o(){var t=go.GraphObject.make;return t(go.Node,"Spot",{locationSpot:go.Spot.TopLeft,locationObjectName:"SHAPE",desiredSize:new go.Size(1,1)},new go.Binding("location","loc",go.Point.parse).makeTwoWay(go.Point.stringify),t(go.Shape,{stroke:null,strokeWidth:1,name:"SHAPE",fill:"black"}))}function i(){var t=go.GraphObject.make;return t(go.Link,t(go.Shape,{stroke:"black",strokeWidth:2,name:"SHAPE"},new go.Binding("strokeWidth","width"),new go.Binding("stroke","stroke")))}var r=this.diagram;if(Math.abs(e-a)<2){var s={category:"GLPointNode",loc:go.Point.stringify(t)},d={key:"movingPt",category:"GLPointNode",loc:go.Point.stringify(n)},l={key:"guideline",category:"guideLine",from:"movingPt",to:s.key,stroke:"blue"},h=o(),p=o(),u=i();r.add(h),r.add(p),r.add(u),h.data=s,p.data=d,u.data=l,u.fromNode=h,u.toNode=p}};